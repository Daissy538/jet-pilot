name: Release

on:
  release:
    types: [created]
  workflow_dispatch:

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  publish:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf

      - name: Install OpenSSL (Windows only)
        if: matrix.platform == 'windows-latest'
        run: |
          choco install openssl
          mkdir -p "C:\Program Files\OpenSSL\ca"
          curl -o "C:\Program Files\OpenSSL\ca\cacert.pem" https://curl.se/ca/cacert.pem
          copy "C:\Program Files\OpenSSL\bin\libcrypto-3-x64.dll" .\src-tauri\resources
          copy "C:\Program Files\OpenSSL\bin\libssl-3-x64.dll" .\src-tauri\resources

      - name: Build Vite + Tauri (MacOS + Linux)
        if: matrix.platform != 'windows-latest'
        run: npm run build

      - name: Build Vite + Tauri (Windows)
        if: matrix.platform == 'windows-latest'
        env:
          OPENSSL_DIR: 'C:\Program Files\OpenSSL'
          SSL_CERT_FILE: 'C:\Program Files\OpenSSL\ca\cacert.pem'
          OPENSSL_NO_VENDOR: 1
        run: npm run build

      - name: Create release (MacOS + Linux)
        if: matrix.platform != 'windows-latest'
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: 'v__VERSION__'
          releaseBody: 'See the assets to download and install this version.'
          releaseDraft: true
          prerelease: false
          tauriScript: ./node_modules/.bin/tauri

      - name: Create release (Windows)
        if: matrix.platform == 'windows-latest'
        uses: tauri-apps/tauri-action@v0
        env:
          OPENSSL_DIR: 'C:\Program Files\OpenSSL'
          SSL_CERT_FILE: 'C:\Program Files\OpenSSL\ca\cacert.pem'
          OPENSSL_NO_VENDOR: 1
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: 'v__VERSION__'
          releaseBody: 'See the assets to download and install this version.'
          releaseDraft: true
          prerelease: false
          tauriScript: ./node_modules/.bin/tauri
